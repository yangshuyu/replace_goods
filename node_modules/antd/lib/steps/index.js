"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var React = _interopRequireWildcard(require("react"));

var PropTypes = _interopRequireWildcard(require("prop-types"));

var _rcSteps = _interopRequireDefault(require("rc-steps"));

var _icon = _interopRequireDefault(require("../icon"));

var Steps =
/*#__PURE__*/
function (_React$Component) {
  (0, _inherits2["default"])(Steps, _React$Component);

  function Steps() {
    (0, _classCallCheck2["default"])(this, Steps);
    return (0, _possibleConstructorReturn2["default"])(this, (0, _getPrototypeOf2["default"])(Steps).apply(this, arguments));
  }

  (0, _createClass2["default"])(Steps, [{
    key: "render",
    value: function render() {
      var prefixCls = this.props.prefixCls;
      var icons = {
        finish: React.createElement(_icon["default"], {
          type: "check",
          className: "".concat(prefixCls, "-finish-icon")
        }),
        error: React.createElement(_icon["default"], {
          type: "close",
          className: "".concat(prefixCls, "-error-icon")
        })
      };
      return React.createElement(_rcSteps["default"], (0, _extends2["default"])({
        icons: icons
      }, this.props));
    }
  }]);
  return Steps;
}(React.Component);

exports["default"] = Steps;
Steps.Step = _rcSteps["default"].Step;
Steps.defaultProps = {
  prefixCls: 'ant-steps',
  iconPrefix: 'ant',
  current: 0
};
Steps.propTypes = {
  prefixCls: PropTypes.string,
  iconPrefix: PropTypes.string,
  current: PropTypes.number
};