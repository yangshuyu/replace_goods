"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var React = _interopRequireWildcard(require("react"));

var _rcTree = _interopRequireWildcard(require("rc-tree"));

var _DirectoryTree = _interopRequireDefault(require("./DirectoryTree"));

var _classnames = _interopRequireDefault(require("classnames"));

var _openAnimation = _interopRequireDefault(require("../_util/openAnimation"));

var _icon = _interopRequireDefault(require("../icon"));

var Tree =
/*#__PURE__*/
function (_React$Component) {
  (0, _inherits2["default"])(Tree, _React$Component);

  function Tree() {
    var _this;

    (0, _classCallCheck2["default"])(this, Tree);
    _this = (0, _possibleConstructorReturn2["default"])(this, (0, _getPrototypeOf2["default"])(Tree).apply(this, arguments));

    _this.renderSwitcherIcon = function (_ref) {
      var isLeaf = _ref.isLeaf,
          expanded = _ref.expanded,
          loading = _ref.loading;
      var _this$props = _this.props,
          prefixCls = _this$props.prefixCls,
          showLine = _this$props.showLine;

      if (loading) {
        return React.createElement(_icon["default"], {
          type: "loading",
          className: "".concat(prefixCls, "-switcher-loading-icon")
        });
      }

      if (showLine) {
        if (isLeaf) {
          return React.createElement(_icon["default"], {
            type: "file",
            className: "".concat(prefixCls, "-switcher-line-icon")
          });
        }

        return React.createElement(_icon["default"], {
          type: expanded ? 'minus-square' : 'plus-square',
          className: "".concat(prefixCls, "-switcher-line-icon"),
          theme: "outlined"
        });
      } else {
        if (isLeaf) {
          return null;
        }

        return React.createElement(_icon["default"], {
          type: "caret-down",
          className: "".concat(prefixCls, "-switcher-icon"),
          theme: "filled"
        });
      }
    };

    _this.setTreeRef = function (node) {
      _this.tree = node;
    };

    return _this;
  }

  (0, _createClass2["default"])(Tree, [{
    key: "render",
    value: function render() {
      var props = this.props;
      var prefixCls = props.prefixCls,
          className = props.className,
          showIcon = props.showIcon;
      var checkable = props.checkable;
      return React.createElement(_rcTree["default"], (0, _extends2["default"])({
        ref: this.setTreeRef
      }, props, {
        className: (0, _classnames["default"])(!showIcon && "".concat(prefixCls, "-icon-hide"), className),
        checkable: checkable ? React.createElement("span", {
          className: "".concat(prefixCls, "-checkbox-inner")
        }) : checkable,
        switcherIcon: this.renderSwitcherIcon
      }), this.props.children);
    }
  }]);
  return Tree;
}(React.Component);

exports["default"] = Tree;
Tree.TreeNode = _rcTree.TreeNode;
Tree.DirectoryTree = _DirectoryTree["default"];
Tree.defaultProps = {
  prefixCls: 'ant-tree',
  checkable: false,
  showIcon: false,
  openAnimation: (0, _extends2["default"])({}, _openAnimation["default"], {
    appear: null
  })
};