"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = Divider;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var React = _interopRequireWildcard(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var __rest = void 0 && (void 0).__rest || function (s, e) {
  var t = {};

  for (var p in s) {
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
  }

  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];
  }
  return t;
};

function Divider(_a) {
  var _classNames;

  var _a$prefixCls = _a.prefixCls,
      prefixCls = _a$prefixCls === void 0 ? 'ant' : _a$prefixCls,
      _a$type = _a.type,
      type = _a$type === void 0 ? 'horizontal' : _a$type,
      _a$orientation = _a.orientation,
      orientation = _a$orientation === void 0 ? '' : _a$orientation,
      className = _a.className,
      children = _a.children,
      dashed = _a.dashed,
      restProps = __rest(_a, ["prefixCls", "type", "orientation", "className", "children", "dashed"]);

  var orientationPrefix = orientation.length > 0 ? '-' + orientation : orientation;
  var classString = (0, _classnames["default"])(className, "".concat(prefixCls, "-divider"), "".concat(prefixCls, "-divider-").concat(type), (_classNames = {}, (0, _defineProperty2["default"])(_classNames, "".concat(prefixCls, "-divider-with-text").concat(orientationPrefix), children), (0, _defineProperty2["default"])(_classNames, "".concat(prefixCls, "-divider-dashed"), !!dashed), _classNames));
  return React.createElement("div", (0, _extends2["default"])({
    className: classString
  }, restProps), children && React.createElement("span", {
    className: "".concat(prefixCls, "-divider-inner-text")
  }, children));
}