import _extends from "@babel/runtime/helpers/extends";
import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _possibleConstructorReturn from "@babel/runtime/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/getPrototypeOf";
import _inherits from "@babel/runtime/helpers/inherits";
import * as React from 'react';
import Upload from './Upload';

var Dragger =
/*#__PURE__*/
function (_React$Component) {
  _inherits(Dragger, _React$Component);

  function Dragger() {
    _classCallCheck(this, Dragger);

    return _possibleConstructorReturn(this, _getPrototypeOf(Dragger).apply(this, arguments));
  }

  _createClass(Dragger, [{
    key: "render",
    value: function render() {
      var props = this.props;
      return React.createElement(Upload, _extends({}, props, {
        type: "drag",
        style: _extends({}, props.style, {
          height: props.height
        })
      }));
    }
  }]);

  return Dragger;
}(React.Component);

export { Dragger as default };