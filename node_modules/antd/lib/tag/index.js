"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var React = _interopRequireWildcard(require("react"));

var ReactDOM = _interopRequireWildcard(require("react-dom"));

var _rcAnimate = _interopRequireDefault(require("rc-animate"));

var _classnames = _interopRequireDefault(require("classnames"));

var _omit = _interopRequireDefault(require("omit.js"));

var _reactLifecyclesCompat = require("react-lifecycles-compat");

var _icon = _interopRequireDefault(require("../icon"));

var _CheckableTag = _interopRequireDefault(require("./CheckableTag"));

var _wave = _interopRequireDefault(require("../_util/wave"));

var __rest = void 0 && (void 0).__rest || function (s, e) {
  var t = {};

  for (var p in s) {
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
  }

  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];
  }
  return t;
};

var Tag =
/*#__PURE__*/
function (_React$Component) {
  (0, _inherits2["default"])(Tag, _React$Component);

  function Tag() {
    var _this;

    (0, _classCallCheck2["default"])(this, Tag);
    _this = (0, _possibleConstructorReturn2["default"])(this, (0, _getPrototypeOf2["default"])(Tag).apply(this, arguments));
    _this.state = {
      closing: false,
      closed: false,
      visible: true,
      mounted: false
    };

    _this.handleIconClick = function (e) {
      var onClose = _this.props.onClose;

      if (onClose) {
        onClose(e);
      }

      if (e.defaultPrevented || 'visible' in _this.props) {
        return;
      }

      _this.setState({
        visible: false
      });
    };

    _this.close = function () {
      if (_this.state.closing || _this.state.closed) {
        return;
      }

      var dom = ReactDOM.findDOMNode((0, _assertThisInitialized2["default"])((0, _assertThisInitialized2["default"])(_this)));
      dom.style.width = "".concat(dom.getBoundingClientRect().width, "px"); // It's Magic Code, don't know why

      dom.style.width = "".concat(dom.getBoundingClientRect().width, "px");

      _this.setState({
        closing: true
      });
    };

    _this.show = function () {
      _this.setState({
        closed: false
      });
    };

    _this.animationEnd = function (_, existed) {
      if (!existed && !_this.state.closed) {
        _this.setState({
          closed: true,
          closing: false
        });

        var afterClose = _this.props.afterClose;

        if (afterClose) {
          afterClose();
        }
      } else {
        _this.setState({
          closed: false
        });
      }
    };

    return _this;
  }

  (0, _createClass2["default"])(Tag, [{
    key: "componentDidUpdate",
    value: function componentDidUpdate(_prevProps, prevState) {
      if (prevState.visible && !this.state.visible) {
        this.close();
      } else if (!prevState.visible && this.state.visible) {
        this.show();
      }
    }
  }, {
    key: "isPresetColor",
    value: function isPresetColor(color) {
      if (!color) {
        return false;
      }

      return /^(pink|red|yellow|orange|cyan|green|blue|purple|geekblue|magenta|volcano|gold|lime)(-inverse)?$/.test(color);
    }
  }, {
    key: "render",
    value: function render() {
      var _classNames;

      var _a = this.props,
          prefixCls = _a.prefixCls,
          closable = _a.closable,
          color = _a.color,
          className = _a.className,
          children = _a.children,
          style = _a.style,
          otherProps = __rest(_a, ["prefixCls", "closable", "color", "className", "children", "style"]);

      var closeIcon = closable ? React.createElement(_icon["default"], {
        type: "close",
        onClick: this.handleIconClick
      }) : '';
      var isPresetColor = this.isPresetColor(color);
      var classString = (0, _classnames["default"])(prefixCls, (_classNames = {}, (0, _defineProperty2["default"])(_classNames, "".concat(prefixCls, "-").concat(color), isPresetColor), (0, _defineProperty2["default"])(_classNames, "".concat(prefixCls, "-has-color"), color && !isPresetColor), (0, _defineProperty2["default"])(_classNames, "".concat(prefixCls, "-close"), this.state.closing), _classNames), className); // fix https://fb.me/react-unknown-prop

      var divProps = (0, _omit["default"])(otherProps, ['onClose', 'afterClose', 'visible']);
      var tagStyle = (0, _extends2["default"])({
        backgroundColor: color && !isPresetColor ? color : null
      }, style);
      var tag = this.state.closed ? React.createElement("span", null) : React.createElement("div", (0, _extends2["default"])({
        "data-show": !this.state.closing
      }, divProps, {
        className: classString,
        style: tagStyle
      }), children, closeIcon);
      return React.createElement(_wave["default"], null, React.createElement(_rcAnimate["default"], {
        component: "",
        showProp: "data-show",
        transitionName: "".concat(prefixCls, "-zoom"),
        transitionAppear: true,
        onEnd: this.animationEnd
      }, tag));
    }
  }], [{
    key: "getDerivedStateFromProps",
    value: function getDerivedStateFromProps(nextProps, state) {
      if ('visible' in nextProps) {
        var newState = {
          visible: nextProps.visible,
          mounted: true
        };

        if (!state.mounted) {
          newState = (0, _extends2["default"])({}, newState, {
            closed: !nextProps.visible
          });
        }

        return newState;
      }

      return null;
    }
  }]);
  return Tag;
}(React.Component);

Tag.CheckableTag = _CheckableTag["default"];
Tag.defaultProps = {
  prefixCls: 'ant-tag',
  closable: false
};
(0, _reactLifecyclesCompat.polyfill)(Tag);
var _default = Tag;
exports["default"] = _default;