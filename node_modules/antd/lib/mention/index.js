"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var React = _interopRequireWildcard(require("react"));

var _rcEditorMention = _interopRequireWildcard(require("rc-editor-mention"));

var _reactLifecyclesCompat = require("react-lifecycles-compat");

var _classnames = _interopRequireDefault(require("classnames"));

var _shallowequal = _interopRequireDefault(require("shallowequal"));

var _icon = _interopRequireDefault(require("../icon"));

var Mention =
/*#__PURE__*/
function (_React$Component) {
  (0, _inherits2["default"])(Mention, _React$Component);

  function Mention(props) {
    var _this;

    (0, _classCallCheck2["default"])(this, Mention);
    _this = (0, _possibleConstructorReturn2["default"])(this, (0, _getPrototypeOf2["default"])(Mention).call(this, props));

    _this.onSearchChange = function (value, prefix) {
      if (_this.props.onSearchChange) {
        return _this.props.onSearchChange(value, prefix);
      }

      return _this.defaultSearchChange(value);
    };

    _this.onChange = function (editorState) {
      if (_this.props.onChange) {
        _this.props.onChange(editorState);
      }
    };

    _this.onFocus = function (ev) {
      _this.setState({
        focus: true
      });

      if (_this.props.onFocus) {
        _this.props.onFocus(ev);
      }
    };

    _this.onBlur = function (ev) {
      _this.setState({
        focus: false
      });

      if (_this.props.onBlur) {
        _this.props.onBlur(ev);
      }
    };

    _this.focus = function () {
      _this.mentionEle._editor.focusEditor();
    };

    _this.mentionRef = function (ele) {
      _this.mentionEle = ele;
    };

    _this.state = {
      suggestions: props.suggestions,
      focus: false
    };
    return _this;
  }

  (0, _createClass2["default"])(Mention, [{
    key: "defaultSearchChange",
    value: function defaultSearchChange(value) {
      var searchValue = value.toLowerCase();
      var filteredSuggestions = (this.props.suggestions || []).filter(function (suggestion) {
        if (suggestion.type && suggestion.type === _rcEditorMention.Nav) {
          return suggestion.props.value ? suggestion.props.value.toLowerCase().indexOf(searchValue) !== -1 : true;
        }

        return suggestion.toLowerCase().indexOf(searchValue) !== -1;
      });
      this.setState({
        suggestions: filteredSuggestions
      });
    }
  }, {
    key: "render",
    value: function render() {
      var _classNames;

      var _this$props = this.props,
          _this$props$className = _this$props.className,
          className = _this$props$className === void 0 ? '' : _this$props$className,
          prefixCls = _this$props.prefixCls,
          loading = _this$props.loading,
          placement = _this$props.placement;
      var _this$state = this.state,
          suggestions = _this$state.suggestions,
          focus = _this$state.focus;
      var cls = (0, _classnames["default"])(className, (_classNames = {}, (0, _defineProperty2["default"])(_classNames, "".concat(prefixCls, "-active"), focus), (0, _defineProperty2["default"])(_classNames, "".concat(prefixCls, "-placement-top"), placement === 'top'), _classNames));
      var notFoundContent = loading ? React.createElement(_icon["default"], {
        type: "loading"
      }) : this.props.notFoundContent;
      return React.createElement(_rcEditorMention["default"], (0, _extends2["default"])({}, this.props, {
        className: cls,
        ref: this.mentionRef,
        onSearchChange: this.onSearchChange,
        onChange: this.onChange,
        onFocus: this.onFocus,
        onBlur: this.onBlur,
        suggestions: suggestions,
        notFoundContent: notFoundContent
      }));
    }
  }], [{
    key: "getDerivedStateFromProps",
    value: function getDerivedStateFromProps(nextProps, state) {
      var suggestions = nextProps.suggestions;

      if (!(0, _shallowequal["default"])(suggestions, state.suggestions)) {
        return {
          suggestions: suggestions
        };
      }

      return null;
    }
  }]);
  return Mention;
}(React.Component);

Mention.getMentions = _rcEditorMention.getMentions;
Mention.defaultProps = {
  prefixCls: 'ant-mention',
  notFoundContent: '无匹配结果，轻敲空格完成输入',
  loading: false,
  multiLines: false,
  placement: 'bottom'
};
Mention.Nav = _rcEditorMention.Nav;
Mention.toString = _rcEditorMention.toString;
Mention.toContentState = _rcEditorMention.toEditorState;
(0, _reactLifecyclesCompat.polyfill)(Mention);
var _default = Mention;
exports["default"] = _default;