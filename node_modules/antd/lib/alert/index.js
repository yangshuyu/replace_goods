"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var React = _interopRequireWildcard(require("react"));

var ReactDOM = _interopRequireWildcard(require("react-dom"));

var _rcAnimate = _interopRequireDefault(require("rc-animate"));

var _icon = _interopRequireDefault(require("../icon"));

var _classnames = _interopRequireDefault(require("classnames"));

var _getDataOrAriaProps = _interopRequireDefault(require("../_util/getDataOrAriaProps"));

function noop() {}

var Alert =
/*#__PURE__*/
function (_React$Component) {
  (0, _inherits2["default"])(Alert, _React$Component);

  function Alert() {
    var _this;

    (0, _classCallCheck2["default"])(this, Alert);
    _this = (0, _possibleConstructorReturn2["default"])(this, (0, _getPrototypeOf2["default"])(Alert).apply(this, arguments));
    _this.state = {
      closing: true,
      closed: false
    };

    _this.handleClose = function (e) {
      e.preventDefault();
      var dom = ReactDOM.findDOMNode((0, _assertThisInitialized2["default"])((0, _assertThisInitialized2["default"])(_this)));
      dom.style.height = "".concat(dom.offsetHeight, "px"); // Magic code
      // 重复一次后才能正确设置 height

      dom.style.height = "".concat(dom.offsetHeight, "px");

      _this.setState({
        closing: false
      });

      (_this.props.onClose || noop)(e);
    };

    _this.animationEnd = function () {
      _this.setState({
        closed: true,
        closing: true
      });

      (_this.props.afterClose || noop)();
    };

    return _this;
  }

  (0, _createClass2["default"])(Alert, [{
    key: "render",
    value: function render() {
      var _classNames, _classNames2;

      var _this$props = this.props,
          description = _this$props.description,
          _this$props$prefixCls = _this$props.prefixCls,
          prefixCls = _this$props$prefixCls === void 0 ? 'ant-alert' : _this$props$prefixCls,
          message = _this$props.message,
          closeText = _this$props.closeText,
          banner = _this$props.banner,
          _this$props$className = _this$props.className,
          className = _this$props$className === void 0 ? '' : _this$props$className,
          style = _this$props.style,
          icon = _this$props.icon;
      var _this$props2 = this.props,
          closable = _this$props2.closable,
          type = _this$props2.type,
          showIcon = _this$props2.showIcon,
          iconType = _this$props2.iconType; // banner模式默认有 Icon

      showIcon = banner && showIcon === undefined ? true : showIcon; // banner模式默认为警告

      type = banner && type === undefined ? 'warning' : type || 'info';
      var iconTheme = 'filled'; // should we give a warning?
      // warning(!iconType, `The property 'iconType' is deprecated. Use the property 'icon' instead.`);

      if (!iconType) {
        switch (type) {
          case 'success':
            iconType = 'check-circle';
            break;

          case 'info':
            iconType = 'info-circle';
            break;

          case 'error':
            iconType = 'close-circle';
            break;

          case 'warning':
            iconType = 'exclamation-circle';
            break;

          default:
            iconType = 'default';
        } // use outline icon in alert with description


        if (!!description) {
          iconTheme = 'outlined';
        }
      } // closeable when closeText is assigned


      if (closeText) {
        closable = true;
      }

      var alertCls = (0, _classnames["default"])(prefixCls, "".concat(prefixCls, "-").concat(type), (_classNames = {}, (0, _defineProperty2["default"])(_classNames, "".concat(prefixCls, "-close"), !this.state.closing), (0, _defineProperty2["default"])(_classNames, "".concat(prefixCls, "-with-description"), !!description), (0, _defineProperty2["default"])(_classNames, "".concat(prefixCls, "-no-icon"), !showIcon), (0, _defineProperty2["default"])(_classNames, "".concat(prefixCls, "-banner"), !!banner), (0, _defineProperty2["default"])(_classNames, "".concat(prefixCls, "-closable"), closable), _classNames), className);
      var closeIcon = closable ? React.createElement("a", {
        onClick: this.handleClose,
        className: "".concat(prefixCls, "-close-icon")
      }, closeText || React.createElement(_icon["default"], {
        type: "close"
      })) : null;
      var dataOrAriaProps = (0, _getDataOrAriaProps["default"])(this.props);
      var iconNode = icon && (React.isValidElement(icon) ? React.cloneElement(icon, {
        className: (0, _classnames["default"])((_classNames2 = {}, (0, _defineProperty2["default"])(_classNames2, icon.props.className, icon.props.className), (0, _defineProperty2["default"])(_classNames2, "".concat(prefixCls, "-icon"), true), _classNames2))
      }) : React.createElement("span", {
        className: "".concat(prefixCls, "-icon")
      }, icon)) || React.createElement(_icon["default"], {
        className: "".concat(prefixCls, "-icon"),
        type: iconType,
        theme: iconTheme
      });
      return this.state.closed ? null : React.createElement(_rcAnimate["default"], {
        component: "",
        showProp: "data-show",
        transitionName: "".concat(prefixCls, "-slide-up"),
        onEnd: this.animationEnd
      }, React.createElement("div", (0, _extends2["default"])({
        "data-show": this.state.closing,
        className: alertCls,
        style: style
      }, dataOrAriaProps), showIcon ? iconNode : null, React.createElement("span", {
        className: "".concat(prefixCls, "-message")
      }, message), React.createElement("span", {
        className: "".concat(prefixCls, "-description")
      }, description), closeIcon));
    }
  }]);
  return Alert;
}(React.Component);

exports["default"] = Alert;