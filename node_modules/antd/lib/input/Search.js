"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var React = _interopRequireWildcard(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var _Input = _interopRequireDefault(require("./Input"));

var _icon = _interopRequireDefault(require("../icon"));

var _button = _interopRequireDefault(require("../button"));

var __rest = void 0 && (void 0).__rest || function (s, e) {
  var t = {};

  for (var p in s) {
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
  }

  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];
  }
  return t;
};

var Search =
/*#__PURE__*/
function (_React$Component) {
  (0, _inherits2["default"])(Search, _React$Component);

  function Search() {
    var _this;

    (0, _classCallCheck2["default"])(this, Search);
    _this = (0, _possibleConstructorReturn2["default"])(this, (0, _getPrototypeOf2["default"])(Search).apply(this, arguments));

    _this.onSearch = function (e) {
      var onSearch = _this.props.onSearch;

      if (onSearch) {
        onSearch(_this.input.input.value, e);
      }

      _this.input.focus();
    };

    _this.saveInput = function (node) {
      _this.input = node;
    };

    return _this;
  }

  (0, _createClass2["default"])(Search, [{
    key: "focus",
    value: function focus() {
      this.input.focus();
    }
  }, {
    key: "blur",
    value: function blur() {
      this.input.blur();
    }
  }, {
    key: "getButtonOrIcon",
    value: function getButtonOrIcon() {
      var _this$props = this.props,
          enterButton = _this$props.enterButton,
          prefixCls = _this$props.prefixCls,
          size = _this$props.size,
          disabled = _this$props.disabled;
      var enterButtonAsElement = enterButton;
      var node;

      if (!enterButton) {
        node = React.createElement(_icon["default"], {
          className: "".concat(prefixCls, "-icon"),
          type: "search",
          key: "searchIcon"
        });
      } else if (enterButtonAsElement.type === _button["default"] || enterButtonAsElement.type === 'button') {
        node = React.cloneElement(enterButtonAsElement, enterButtonAsElement.type === _button["default"] ? {
          className: "".concat(prefixCls, "-button"),
          size: size
        } : {});
      } else {
        node = React.createElement(_button["default"], {
          className: "".concat(prefixCls, "-button"),
          type: "primary",
          size: size,
          disabled: disabled,
          key: "enterButton"
        }, enterButton === true ? React.createElement(_icon["default"], {
          type: "search"
        }) : enterButton);
      }

      return React.cloneElement(node, {
        onClick: this.onSearch
      });
    }
  }, {
    key: "render",
    value: function render() {
      var _classNames;

      var _a = this.props,
          className = _a.className,
          prefixCls = _a.prefixCls,
          inputPrefixCls = _a.inputPrefixCls,
          size = _a.size,
          suffix = _a.suffix,
          enterButton = _a.enterButton,
          others = __rest(_a, ["className", "prefixCls", "inputPrefixCls", "size", "suffix", "enterButton"]);

      delete others.onSearch;
      var buttonOrIcon = this.getButtonOrIcon();
      var searchSuffix = suffix ? [suffix, buttonOrIcon] : buttonOrIcon;

      if (Array.isArray(searchSuffix)) {
        searchSuffix = searchSuffix.map(function (item, index) {
          if (!React.isValidElement(item) || item.key) {
            return item;
          }

          return React.cloneElement(item, {
            key: index
          });
        });
      }

      var inputClassName = (0, _classnames["default"])(prefixCls, className, (_classNames = {}, (0, _defineProperty2["default"])(_classNames, "".concat(prefixCls, "-enter-button"), !!enterButton), (0, _defineProperty2["default"])(_classNames, "".concat(prefixCls, "-").concat(size), !!size), _classNames));
      return React.createElement(_Input["default"], (0, _extends2["default"])({
        onPressEnter: this.onSearch
      }, others, {
        size: size,
        className: inputClassName,
        prefixCls: inputPrefixCls,
        suffix: searchSuffix,
        ref: this.saveInput
      }));
    }
  }]);
  return Search;
}(React.Component);

exports["default"] = Search;
Search.defaultProps = {
  inputPrefixCls: 'ant-input',
  prefixCls: 'ant-input-search',
  enterButton: false
};