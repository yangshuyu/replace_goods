"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var React = _interopRequireWildcard(require("react"));

var PropTypes = _interopRequireWildcard(require("prop-types"));

var _radio = _interopRequireDefault(require("./radio"));

var RadioButton =
/*#__PURE__*/
function (_React$Component) {
  (0, _inherits2["default"])(RadioButton, _React$Component);

  function RadioButton() {
    (0, _classCallCheck2["default"])(this, RadioButton);
    return (0, _possibleConstructorReturn2["default"])(this, (0, _getPrototypeOf2["default"])(RadioButton).apply(this, arguments));
  }

  (0, _createClass2["default"])(RadioButton, [{
    key: "render",
    value: function render() {
      var radioProps = (0, _extends2["default"])({}, this.props);

      if (this.context.radioGroup) {
        radioProps.onChange = this.context.radioGroup.onChange;
        radioProps.checked = this.props.value === this.context.radioGroup.value;
        radioProps.disabled = this.props.disabled || this.context.radioGroup.disabled;
      }

      return React.createElement(_radio["default"], radioProps);
    }
  }]);
  return RadioButton;
}(React.Component);

exports["default"] = RadioButton;
RadioButton.defaultProps = {
  prefixCls: 'ant-radio-button'
};
RadioButton.contextTypes = {
  radioGroup: PropTypes.any
};