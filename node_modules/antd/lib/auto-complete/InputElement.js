"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var React = _interopRequireWildcard(require("react"));

var ReactDOM = _interopRequireWildcard(require("react-dom"));

var InputElement =
/*#__PURE__*/
function (_React$Component) {
  (0, _inherits2["default"])(InputElement, _React$Component);

  function InputElement() {
    var _this;

    (0, _classCallCheck2["default"])(this, InputElement);
    _this = (0, _possibleConstructorReturn2["default"])(this, (0, _getPrototypeOf2["default"])(InputElement).apply(this, arguments));

    _this.focus = function () {
      _this.ele.focus ? _this.ele.focus() : ReactDOM.findDOMNode(_this.ele).focus();
    };

    _this.blur = function () {
      _this.ele.blur ? _this.ele.blur() : ReactDOM.findDOMNode(_this.ele).blur();
    };

    _this.saveRef = function (ele) {
      _this.ele = ele;
      var childRef = _this.props.children.ref;

      if (typeof childRef === 'function') {
        childRef(ele);
      }
    };

    return _this;
  }

  (0, _createClass2["default"])(InputElement, [{
    key: "render",
    value: function render() {
      return React.cloneElement(this.props.children, (0, _extends2["default"])({}, this.props, {
        ref: this.saveRef
      }), null);
    }
  }]);
  return InputElement;
}(React.Component);

exports["default"] = InputElement;