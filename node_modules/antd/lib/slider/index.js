"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _extends3 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var React = _interopRequireWildcard(require("react"));

var _Slider = _interopRequireDefault(require("rc-slider/lib/Slider"));

var _Range = _interopRequireDefault(require("rc-slider/lib/Range"));

var _Handle = _interopRequireDefault(require("rc-slider/lib/Handle"));

var _tooltip = _interopRequireDefault(require("../tooltip"));

var __rest = void 0 && (void 0).__rest || function (s, e) {
  var t = {};

  for (var p in s) {
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
  }

  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];
  }
  return t;
};

var Slider =
/*#__PURE__*/
function (_React$Component) {
  (0, _inherits2["default"])(Slider, _React$Component);

  function Slider(props) {
    var _this;

    (0, _classCallCheck2["default"])(this, Slider);
    _this = (0, _possibleConstructorReturn2["default"])(this, (0, _getPrototypeOf2["default"])(Slider).call(this, props));

    _this.toggleTooltipVisible = function (index, visible) {
      _this.setState(function (_ref) {
        var visibles = _ref.visibles;
        return {
          visibles: (0, _extends3["default"])({}, visibles, (0, _defineProperty2["default"])({}, index, visible))
        };
      });
    };

    _this.handleWithTooltip = function (_a) {
      var value = _a.value,
          dragging = _a.dragging,
          index = _a.index,
          restProps = __rest(_a, ["value", "dragging", "index"]);

      var _this$props = _this.props,
          tooltipPrefixCls = _this$props.tooltipPrefixCls,
          tipFormatter = _this$props.tipFormatter,
          tooltipVisible = _this$props.tooltipVisible;
      var visibles = _this.state.visibles;
      var isTipFormatter = tipFormatter ? visibles[index] || dragging : false;
      var visible = tooltipVisible || tooltipVisible === undefined && isTipFormatter;
      return React.createElement(_tooltip["default"], {
        prefixCls: tooltipPrefixCls,
        title: tipFormatter ? tipFormatter(value) : '',
        visible: visible,
        placement: "top",
        transitionName: "zoom-down",
        key: index
      }, React.createElement(_Handle["default"], (0, _extends3["default"])({}, restProps, {
        value: value,
        onMouseEnter: function onMouseEnter() {
          return _this.toggleTooltipVisible(index, true);
        },
        onMouseLeave: function onMouseLeave() {
          return _this.toggleTooltipVisible(index, false);
        }
      })));
    };

    _this.saveSlider = function (node) {
      _this.rcSlider = node;
    };

    _this.state = {
      visibles: {}
    };
    return _this;
  }

  (0, _createClass2["default"])(Slider, [{
    key: "focus",
    value: function focus() {
      this.rcSlider.focus();
    }
  }, {
    key: "blur",
    value: function blur() {
      this.rcSlider.blur();
    }
  }, {
    key: "render",
    value: function render() {
      var _a = this.props,
          range = _a.range,
          restProps = __rest(_a, ["range"]);

      if (range) {
        return React.createElement(_Range["default"], (0, _extends3["default"])({}, restProps, {
          ref: this.saveSlider,
          handle: this.handleWithTooltip
        }));
      }

      return React.createElement(_Slider["default"], (0, _extends3["default"])({}, restProps, {
        ref: this.saveSlider,
        handle: this.handleWithTooltip
      }));
    }
  }]);
  return Slider;
}(React.Component);

exports["default"] = Slider;
Slider.defaultProps = {
  prefixCls: 'ant-slider',
  tooltipPrefixCls: 'ant-tooltip',
  tipFormatter: function tipFormatter(value) {
    return value.toString();
  }
};